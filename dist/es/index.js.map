{"version":3,"file":"index.js","sources":["../../src/index.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport * as qrcode from 'qrcode';\r\n\r\n// TODO: pull this off of the QRCode class type so it matches.\r\ntype Modules = Array<Array<boolean>>;\r\ntype Excavation = {x: number; y: number; w: number; h: number};\r\n\r\n// Convert from UTF-16, forcing the use of byte-mode encoding in our QR Code.\r\n// This allows us to encode Hanji, Kanji, emoji, etc. Ideally we'd do more\r\n// detection and not resort to byte-mode if possible, but we're trading off\r\n// a smaller library for a smaller amount of data we can potentially encode.\r\n// Based on http://jonisalonen.com/2012/from-utf-16-to-utf-8-in-javascript/\r\nfunction convertStr(str: string): string {\r\n  let out = '';\r\n  for (let i = 0; i < str.length; i++) {\r\n    let charcode = str.charCodeAt(i);\r\n    if (charcode < 0x0080) {\r\n      out += String.fromCharCode(charcode);\r\n    } else if (charcode < 0x0800) {\r\n      out += String.fromCharCode(0xc0 | (charcode >> 6));\r\n      out += String.fromCharCode(0x80 | (charcode & 0x3f));\r\n    } else if (charcode < 0xd800 || charcode >= 0xe000) {\r\n      out += String.fromCharCode(0xe0 | (charcode >> 12));\r\n      out += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3f));\r\n      out += String.fromCharCode(0x80 | (charcode & 0x3f));\r\n    } else {\r\n      // This is a surrogate pair, so we'll reconsitute the pieces and work\r\n      // from that\r\n      i++;\r\n      charcode =\r\n        0x10000 + (((charcode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\r\n      out += String.fromCharCode(0xf0 | (charcode >> 18));\r\n      out += String.fromCharCode(0x80 | ((charcode >> 12) & 0x3f));\r\n      out += String.fromCharCode(0x80 | ((charcode >> 6) & 0x3f));\r\n      out += String.fromCharCode(0x80 | (charcode & 0x3f));\r\n    }\r\n  }\r\n  return out;\r\n}\r\n\r\ntype QRProps = {\r\n  value: string;\r\n  size: number;\r\n  level: qrcode.QRCodeErrorCorrectionLevel;\r\n  bgColor: string;\r\n  fgColor: string;\r\n  style?: object;\r\n  includeMargin: boolean;\r\n  imageSettings?: {\r\n    src: string;\r\n    height: number;\r\n    width: number;\r\n    excavate: boolean;\r\n    x?: number;\r\n    y?: number;\r\n  };\r\n};\r\n\r\nexport type RootProps = QRProps & {renderAs: 'svg' | 'canvas'};\r\n\r\nconst DEFAULT_PROPS: Partial<RootProps> = {\r\n  size: 128,\r\n  level: 'L',\r\n  bgColor: '#FFFFFF',\r\n  fgColor: '#000000',\r\n  includeMargin: false,\r\n};\r\n\r\n// const PROP_TYPES =\r\n//   process.env.NODE_ENV !== 'production'\r\n//     ? {\r\n//         value: PropTypes.string.isRequired,\r\n//         size: PropTypes.number,\r\n//         level: PropTypes.oneOf(['L', 'M', 'Q', 'H']),\r\n//         bgColor: PropTypes.string,\r\n//         fgColor: PropTypes.string,\r\n//         includeMargin: PropTypes.bool,\r\n//         imageSettings: PropTypes.shape({\r\n//           src: PropTypes.string.isRequired,\r\n//           height: PropTypes.number.isRequired,\r\n//           width: PropTypes.number.isRequired,\r\n//           excavate: PropTypes.bool,\r\n//           x: PropTypes.number,\r\n//           y: PropTypes.number,\r\n//         }),\r\n//       }\r\n//     : {};\r\n\r\nconst MARGIN_SIZE = 4;\r\n\r\n// This is *very* rough estimate of max amount of QRCode allowed to be covered.\r\n// It is \"wrong\" in a lot of ways (area is a terrible way to estimate, it\r\n// really should be number of modules covered), but if for some reason we don't\r\n// get an explicit height or width, I'd rather default to something than throw.\r\nconst DEFAULT_IMG_SCALE = 0.1;\r\n\r\nfunction generatePath(modules: Modules, margin = 0): string {\r\n  const ops: string[] = [];\r\n  modules.forEach(function(row, y) {\r\n    let start: number | null = null;\r\n    row.forEach(function(cell, x) {\r\n      if (!cell && start !== null) {\r\n        // M0 0h7v1H0z injects the space with the move and drops the comma,\r\n        // saving a char per operation\r\n        ops.push(\r\n          `M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`\r\n        );\r\n        start = null;\r\n        return;\r\n      }\r\n\r\n      // end of row, clean up or skip\r\n      if (x === row.length - 1) {\r\n        if (!cell) {\r\n          // We would have closed the op above already so this can only mean\r\n          // 2+ light modules in a row.\r\n          return;\r\n        }\r\n        if (start === null) {\r\n          // Just a single dark module.\r\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\r\n        } else {\r\n          // Otherwise finish the current line.\r\n          ops.push(\r\n            `M${start + margin},${y + margin} h${x + 1 - start}v1H${start +\r\n              margin}z`\r\n          );\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (cell && start === null) {\r\n        start = x;\r\n      }\r\n    });\r\n  });\r\n  return ops.join('');\r\n}\r\n\r\n// We could just do this in generatePath, except that we want to support\r\n// non-Path2D canvas, so we need to keep it an explicit step.\r\nfunction excavateModules(modules: Modules, excavation: Excavation): Modules {\r\n  return modules.slice().map((row, y) => {\r\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\r\n      return row;\r\n    }\r\n    return row.map((cell, x) => {\r\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\r\n        return cell;\r\n      }\r\n      return false;\r\n    });\r\n  });\r\n}\r\n\r\nfunction getImageSettings(\r\n  props: QRProps,\r\n  cells: Modules\r\n): null | {\r\n  x: number;\r\n  y: number;\r\n  h: number;\r\n  w: number;\r\n  excavation: Excavation | null;\r\n} {\r\n  const {imageSettings, size, includeMargin} = props;\r\n  if (imageSettings == null) {\r\n    return null;\r\n  }\r\n  const margin = includeMargin ? MARGIN_SIZE : 0;\r\n  const numCells = cells.length + margin * 2;\r\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\r\n  const scale = numCells / size;\r\n  const w = (imageSettings.width || defaultSize) * scale;\r\n  const h = (imageSettings.height || defaultSize) * scale;\r\n  const x =\r\n    imageSettings.x == null\r\n      ? cells.length / 2 - w / 2\r\n      : imageSettings.x * scale;\r\n  const y =\r\n    imageSettings.y == null\r\n      ? cells.length / 2 - h / 2\r\n      : imageSettings.y * scale;\r\n\r\n  let excavation: Excavation | null = null;\r\n  if (imageSettings.excavate) {\r\n    const floorX = Math.floor(x);\r\n    const floorY = Math.floor(y);\r\n    const ceilW = Math.ceil(w + x - floorX);\r\n    const ceilH = Math.ceil(h + y - floorY);\r\n    excavation = {x: floorX, y: floorY, w: ceilW, h: ceilH};\r\n  }\r\n\r\n  return {x, y, h, w, excavation};\r\n}\r\n\r\n// For canvas we're going to switch our drawing mode based on whether or not\r\n// the environment supports Path2D. We only need the constructor to be\r\n// supported, but Edge doesn't actually support the path (string) type\r\n// argument. Luckily it also doesn't support the addPath() method. We can\r\n// treat that as the same thing.\r\nconst SUPPORTS_PATH2D = (function() {\r\n  try {\r\n    new Path2D().addPath(new Path2D());\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n  return true;\r\n})();\r\n\r\nclass QRCodeCanvas extends React.PureComponent<QRProps, {imgLoaded: boolean}> {\r\n  _canvas?: HTMLCanvasElement;\r\n  _image?: HTMLImageElement;\r\n\r\n  state = {imgLoaded: false};\r\n\r\n  static defaultProps = DEFAULT_PROPS;\r\n\r\n  componentDidMount() {\r\n    this.update();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    const {\r\n      value,\r\n      size,\r\n      level,\r\n      bgColor,\r\n      fgColor,\r\n      includeMargin,\r\n      imageSettings,\r\n    } = this.props;\r\n\r\n    const qrcodeObj = qrcode.create(convertStr(value), {\r\n      errorCorrectionLevel: level,\r\n    });\r\n\r\n    if (this._canvas != null) {\r\n      const canvas = this._canvas;\r\n\r\n      const ctx = canvas.getContext('2d');\r\n      if (!ctx) {\r\n        return;\r\n      }\r\n\r\n      let cells = qrcodeObj.modules.data;\r\n      if (cells === null) {\r\n        return;\r\n      }\r\n\r\n      const margin = includeMargin ? MARGIN_SIZE : 0;\r\n      const numCells = cells.length + margin * 2;\r\n      const calculatedImageSettings = getImageSettings(this.props, cells);\r\n\r\n      if (imageSettings != null && calculatedImageSettings != null) {\r\n        if (calculatedImageSettings.excavation != null) {\r\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\r\n        }\r\n      }\r\n\r\n      // We're going to scale this so that the number of drawable units\r\n      // matches the number of cells. This avoids rounding issues, but does\r\n      // result in some potentially unwanted single pixel issues between\r\n      // blocks, only in environments that don't support Path2D.\r\n      const pixelRatio = window.devicePixelRatio || 1;\r\n      canvas.height = canvas.width = size * pixelRatio;\r\n      const scale = (size / numCells) * pixelRatio;\r\n      ctx.scale(scale, scale);\r\n\r\n      // Draw solid background, only paint dark modules.\r\n      ctx.fillStyle = bgColor;\r\n      ctx.fillRect(0, 0, numCells, numCells);\r\n\r\n      ctx.fillStyle = fgColor;\r\n      if (SUPPORTS_PATH2D) {\r\n        // $FlowFixMe: Path2D c'tor doesn't support args yet.\r\n        ctx.fill(new Path2D(generatePath(cells, margin)));\r\n      } else {\r\n        cells.forEach(function(row: object[], rdx: number) {\r\n          row.forEach(function(cell: object, cdx: number) {\r\n            if (cell) {\r\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      if (\r\n        this.state.imgLoaded &&\r\n        this._image &&\r\n        calculatedImageSettings != null\r\n      ) {\r\n        ctx.drawImage(\r\n          this._image,\r\n          calculatedImageSettings.x + margin,\r\n          calculatedImageSettings.y + margin,\r\n          calculatedImageSettings.w,\r\n          calculatedImageSettings.h\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  handleImageLoad = () => {\r\n    this.setState({imgLoaded: true});\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      size,\r\n      level,\r\n      bgColor,\r\n      fgColor,\r\n      style,\r\n      includeMargin,\r\n      imageSettings,\r\n      ...otherProps\r\n    } = this.props;\r\n    const canvasStyle = {height: size, width: size, ...style};\r\n    let img = null;\r\n    const imgSrc = imageSettings && imageSettings.src;\r\n    if (imageSettings != null && imgSrc != null) {\r\n      img = (\r\n        <img\r\n          src={imgSrc}\r\n          style={{display: 'none'}}\r\n          onLoad={this.handleImageLoad}\r\n          ref={(ref: HTMLImageElement) => (this._image = ref)}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <canvas\r\n          style={canvasStyle}\r\n          height={size}\r\n          width={size}\r\n          ref={(ref: HTMLCanvasElement) => (this._canvas = ref)}\r\n          {...otherProps}\r\n        />\r\n        {img}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass QRCodeSVG extends React.PureComponent<QRProps> {\r\n  static defaultProps = DEFAULT_PROPS;\r\n\r\n  render() {\r\n    const {\r\n      value,\r\n      size,\r\n      level,\r\n      bgColor,\r\n      fgColor,\r\n      includeMargin,\r\n      imageSettings,\r\n      ...otherProps\r\n    } = this.props;\r\n\r\n    const qrcodeObj = qrcode.create(convertStr(value), {\r\n      errorCorrectionLevel: level,\r\n    });\r\n\r\n    let cells = qrcodeObj.modules.data;\r\n    if (cells === null) {\r\n      return null;\r\n    }\r\n\r\n    const margin = includeMargin ? MARGIN_SIZE : 0;\r\n    const numCells = cells.length + margin * 2;\r\n    const calculatedImageSettings = getImageSettings(this.props, cells);\r\n\r\n    let image = null;\r\n    if (imageSettings != null && calculatedImageSettings != null) {\r\n      if (calculatedImageSettings.excavation != null) {\r\n        cells = excavateModules(cells, calculatedImageSettings.excavation);\r\n      }\r\n\r\n      image = (\r\n        <image\r\n          xlinkHref={imageSettings.src}\r\n          height={calculatedImageSettings.h}\r\n          width={calculatedImageSettings.w}\r\n          x={calculatedImageSettings.x + margin}\r\n          y={calculatedImageSettings.y + margin}\r\n          preserveAspectRatio=\"none\"\r\n        />\r\n      );\r\n    }\r\n\r\n    // Drawing strategy: instead of a rect per module, we're going to create a\r\n    // single path for the dark modules and layer that on top of a light rect,\r\n    // for a total of 2 DOM nodes. We pay a bit more in string concat but that's\r\n    // way faster than DOM ops.\r\n    // For level 1, 441 nodes -> 2\r\n    // For level 40, 31329 -> 2\r\n    const fgPath = generatePath(cells, margin);\r\n\r\n    return (\r\n      <svg\r\n        shapeRendering=\"crispEdges\"\r\n        height={size}\r\n        width={size}\r\n        viewBox={`0 0 ${numCells} ${numCells}`}\r\n        {...otherProps}>\r\n        <path fill={bgColor} d={`M0,0 h${numCells}v${numCells}H0z`} />\r\n        <path fill={fgColor} d={fgPath} />\r\n        {image}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nconst QRCode: React.SFC<RootProps> = (props: RootProps): JSX.Element => {\r\n  const {renderAs, ...otherProps} = props;\r\n  const Component = renderAs === 'svg' ? QRCodeSVG : QRCodeCanvas;\r\n  return <Component {...otherProps} />;\r\n};\r\n\r\nQRCode.defaultProps = {renderAs: 'canvas', ...DEFAULT_PROPS};\r\n\r\nexport default QRCode;\r\n"],"names":[],"mappings":"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"}